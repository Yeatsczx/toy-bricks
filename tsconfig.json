{
    "compilerOptions": {
      "skipLibCheck": true,
      "jsx" : "react",
      "declaration": true,
      "esModuleInterop": true ,//es6的模块化和非es6的模块化标准互通 
      // "allowSyntheticDefaultImports": true,//允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
      "baseUrl": "./",//解析非相对模块名的基准目录。
      // webpack 配置别名，但在TS中会报红找不到，所以tslint也需要配置
      "paths": {
        "@assets/*": ["./assets/*"],
        "@src/*": ["./app/renderer/*"],
        "@common/*": ["./app/renderer/common/*"]
    },
      "moduleResolution": "node"//决定如何处理模块
    },
    "exclude": ["dist", "node_modules"],
    "include": ["src/**/*.ts","packages/**/*.tsx","packages/**/*.ts", "examples/**/*.tsx","examples/**/*.ts", "examples/basic/src/index.jsx", "examples/basic/src/pages/index.js", "examples/basic/src/components/Topbar.js", "examples/basic/src/components/Toolbox.js", "examples/basic/src/components/SettingsPanel.js", "examples/basic/src/components/RenderNode.js"]
  }